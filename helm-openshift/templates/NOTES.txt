Thank you for installing {{ .Chart.Name }}.

Your TrustGate deployment is now being set up. This may take a few minutes.

{{- if .Values.route.controlPlane.host }}
You can access the TrustGate services at:
  - Control Plane: https://{{ .Values.route.controlPlane.host }}
  - Data Plane: https://{{ .Values.route.dataPlane.host }}
{{- if .Values.firewall.enabled }}
  - Firewall API: https://{{ .Values.route.firewall.host | default (printf "firewall.%s" .Values.route.controlPlane.host) }}
{{- end }}
{{- else }}
To get the hostnames for your TrustGate services, check the created Routes:

  oc get routes -n {{ .Release.Namespace }}

Alternatively, you can use port-forwarding:
1. For the Control Plane:
   oc port-forward svc/{{ .Release.Name }}-control-plane -n {{ .Release.Namespace }} 8080:80
   Access at: http://localhost:8080

2. For the Data Plane:
   oc port-forward svc/{{ .Release.Name }}-data-plane -n {{ .Release.Namespace }} 8081:80
   Access at: http://localhost:8081

{{- if .Values.firewall.enabled }}
3. For the Firewall API:
   oc port-forward svc/{{ .Release.Name }}-firewall -n {{ .Release.Namespace }} 8082:80
   Access at: http://localhost:8082
{{- end }}
{{- end }}

For more information on using TrustGate, please visit:
https://docs.neuraltrust.ai

To view the status of your deployment:
  oc get pods -n {{ .Release.Namespace }}

Access URLs:
{{- if .Values.route.controlPlane.host }}
1. Access the Control Plane API at:
   https://{{ .Values.route.controlPlane.host }}

2. Access the Data Plane API at:
   https://{{ .Values.route.dataPlane.host }}

{{- else }}
After port-forwarding as described above:
1. Control Plane API: http://localhost:8080/api/v1
2. Data Plane API: http://localhost:8081
{{- if .Values.firewall.enabled }}
3. Firewall API: http://localhost:8082
{{- end }}
{{- end }}

{{- if .Values.postgresql.enabled }}
PostgreSQL can be accessed on the following DNS name from within your cluster:
    {{ include "trustgate.fullname" . }}-postgresql.{{ .Release.Namespace }}.svc.cluster.local:5432
{{- end }}

{{- if .Values.redis.enabled }}
Redis can be accessed on the following DNS name from within your cluster:
    {{ include "trustgate.fullname" . }}-redis-headless.{{ .Release.Namespace }}.svc.cluster.local:6379
{{- end }}

Initial setup:
1. Ensure your DNS records are configured for the hostnames specified in the Routes (if you provided them in values.yaml or if they were automatically generated by OpenShift).
2. Configure your first API Gateway:
   curl -X POST https://{{ .Values.route.controlPlane.host }}/api/v1/gateways \
     -H "Content-Type: application/json" \
     -d '{"name": "my-gateway", "subdomain": "api.example.com"}'

Monitor the deployment:
{{- if .Values.monitoring.serviceMonitor.enabled }}
- Metrics are available via ServiceMonitor
- Check Grafana for pre-configured dashboards
{{- end }}

Get the application logs:
  oc logs -n {{ .Release.Namespace }} -l "app.kubernetes.io/instance={{ .Release.Name }}" -f

{{- if .Values.firewall.enabled }}
-------------------------------------------------
FIREWALL API CONFIGURATION
-------------------------------------------------

To use the Firewall API, you need to include the JWT token in your requests.
The JWT token has been generated during installation and saved to .secret/firewall_jwt_credentials.txt in the directory where you ran the deploy script.

Example request to the Firewall API:

curl -X POST https://{{ if .Values.route.firewall.host }}{{ .Values.route.firewall.host | default (printf "firewall.%s" .Values.route.controlPlane.host) }}{{ else }}localhost:8082{{ end }}/v1/firewall \
  -H "Authorization: Bearer YOUR_JWT_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"input": "Your text to scan"}'

To get your JWT token (from the directory where you ran deploy-openshift.sh):
  cat .secret/firewall_jwt_credentials.txt

The Firewall API supports the following endpoints:
- POST /v1/firewall - Scan text for harmful content
- GET /health - Check the health of the firewall service

For more information on the Firewall API, please refer to the documentation.
{{- end }}

Need help? Visit:
- Documentation: https://docs.neuraltrust.ai
- Community: https://join.slack.com/t/neuraltrustcommunity/shared_invite/zt-2xl47cag6-_HFNpltIULnA3wh4R6AqBg
- Issues: https://github.com/NeuralTrust/TrustGate/issues

{{ if .Values.postgresql.enabled -}}
NOTE: PostgreSQL is enabled. Make sure to backup your data regularly.
{{- end }} 